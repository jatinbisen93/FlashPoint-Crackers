# ShopMart - Complete E-Commerce System

A modern, full-featured e-commerce platform with real-time inventory management, user shopping features, and admin dashboard.

## 📁 Project Structure

```
project-folder/
├── index.html              # Landing page
├── login.html              # Authentication page
├── shop.html               # User shopping interface
├── admin.html              # Admin dashboard
├── styles.css              # All styling
├── firebase-config.js      # Firebase configuration
├── auth.js                 # Authentication logic
├── shop.js                 # User shopping logic
├── admin.js                # Admin dashboard logic
└── README.md              # This file
```

## 🚀 Quick Start

### 1. Setup Files
1. Create a new folder for your project
2. Copy ALL 9 files into this folder:
   - index.html
   - login.html
   - shop.html
   - admin.html
   - styles.css
   - firebase-config.js
   - auth.js
   - shop.js
   - admin.js

### 2. Firebase Configuration (Already Done)
The Firebase configuration is already set up in `firebase-config.js`. The database is configured to use:
- Database URL: `https://inventory-31f11-default-rtdb.europe-west1.firebasedatabase.app`
- **Important**: All products MUST use `quantity` field (not `qty`)

### 3. Open the Application
1. Open `index.html` in your web browser
2. Click "Get Started" to go to login page
3. Register a new account (choose User or Admin)
4. Start using the application!

## 👥 User Roles

### User Account
- Browse products with search
- View product details
- Add products to cart
- Manage wishlist
- Update cart quantities
- Checkout and complete orders

### Admin Account
- View dashboard statistics
- Add new products
- Edit existing products
- Delete products
- Update stock quantities
- View low stock notifications

## 📝 Adding Products (Admin)

When adding products as admin, use these fields:

```
Product Name: iPhone 14 Pro
Category: Electronics
Description: Latest iPhone with advanced features
Price: 69999
Quantity: 10
Image URL: https://example.com/image.jpg
```

**Important Field Names:**
- Use `quantity` (not `qty`) for stock count
- Use `image` (not `img`) for image URL
- Use `price` as a number (e.g., 69999, not "69999")

## 🔧 Database Structure

Products in Firebase should follow this structure:

```json
{
  "products": {
    "product_id_1": {
      "name": "Product Name",
      "category": "Electronics",
      "description": "Product description",
      "price": 999.99,
      "quantity": 10,
      "image": "https://example.com/image.jpg",
      "createdAt": 1234567890
    }
  }
}
```

## ✨ Key Features

### Real-time Updates
- Cart quantities update instantly
- Stock levels sync across all users
- Notifications for low stock
- Live total calculations

### Stock Management
- Shows available stock on product cards
- Displays "Only X Left!" for low stock (< 5)
- "Out of Stock" badge for unavailable items
- Prevents ordering more than available
- Admin can add stock quantities

### User Experience
- Responsive design (mobile, tablet, desktop)
- Smooth animations
- Toast notifications
- Modal dialogs
- Search functionality
- Category filtering

## 🎨 Color Scheme

The application uses a modern gradient color palette:
- Primary: Purple gradient (#667eea to #764ba2)
- Success: Green gradient (#27ae60 to #2ecc71)
- Warning: Orange (#f39c12)
- Danger: Red gradient (#e74c3c to #c0392b)

## 📱 Responsive Design

The application is fully responsive:
- **Desktop**: Full features with sidebar navigation
- **Tablet**: Optimized layout with collapsible menu
- **Mobile**: Touch-friendly interface with hamburger menu

## 🔐 Security Notes

**For Development:**
- Current Firebase rules allow read/write access for testing
- Authentication is required for user/admin features

**For Production:**
- Update Firebase security rules
- Implement proper authentication checks
- Add input validation
- Use HTTPS
- Enable Firebase Authentication security features

## 🐛 Troubleshooting

### Products showing "undefined" or "Out of Stock"
- Check that products use `quantity` field (not `qty`)
- Verify `price` is a number, not a string
- Ensure `image` field exists (not `img`)

### CSS not loading
- Verify `styles.css` is in the same folder
- Clear browser cache (Ctrl+F5)
- Check browser console for errors

### Cart showing NaN
- This is now fixed - cart handles both `quantity` and `qty` fields
- Ensure products have valid price values

### Login not working
- Check Firebase configuration in `firebase-config.js`
- Verify internet connection
- Check browser console for errors

## 💡 Tips

1. **First Time Setup**: Register as Admin to add products first
2. **Testing**: Use incognito mode to test different user accounts
3. **Stock Updates**: Admin can add stock without editing entire product
4. **Search**: Search works on name, description, and category
5. **Cart Persistence**: Cart items are saved per user in Firebase

## 📞 Support

If you encounter issues:
1. Check the browser console (F12)
2. Verify all files are in the correct location
3. Ensure Firebase configuration is correct
4. Check that you're using the correct field names

## 🎯 Common Tasks

### Adding a Product (Admin)
1. Login as admin
2. Fill out the "Add New Product" form
3. Click "Add Product"
4. Product appears in the list below

### Shopping (User)
1. Login as user
2. Browse products
3. Click "Add to Cart"
4. View cart and adjust quantities
5. Click "Proceed to Checkout"

### Managing Stock (Admin)
1. View product in admin list
2. Enter quantity in "Add qty" field
3. Click the + button
4. Stock updates immediately

## 🔄 Updates

Version 1.0 - Features:
- Landing page
- User/Admin authentication
- Product management
- Shopping cart
- Wishlist
- Real-time stock updates
- Responsive design
- Low stock notifications

---

Made with ❤️ for modern e-commerce